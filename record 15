1.Write a MongoDB query to create a user “CUSTOMER1” and grant the read role in the INVOICE database.
2.Write a MongoDB query to create the backup for the INVOICE database.
3.Write a MongoDB query to restore a particular database or a collection.
4.Write a MongoDB query to create an index for the collection customer using the field customer_name

ans1)INVOICE> db.createUser({user:"CUSTOMER1",pwd:"customer1",roles:[{role:"read",db:"INVOICE"}]})
{ ok: 1 }
INVOICE> show users
[
  {
    _id: 'INVOICE.CUSTOMER1',
    userId: UUID('5825f9f9-abbb-4a36-a27c-95c55011650d'),
    user: 'CUSTOMER1',
    db: 'INVOICE',
    roles: [ { role: 'read', db: 'INVOICE' } ],
    mechanisms: [ 'SCRAM-SHA-1', 'SCRAM-SHA-256' ]
  }
]

ans2)ksb@ksb-OptiPlex-3060:~$ mongodump --db=INVOICE --out=/home/ksb/ksb
2025-05-02T09:15:02.215+0530	writing INVOICE.Product to /home/ksb/ksb/INVOICE/Product.bson
2025-05-02T09:15:02.215+0530	writing INVOICE.Customer to /home/ksb/ksb/INVOICE/Customer.bson
2025-05-02T09:15:02.216+0530	writing INVOICE.anu to /home/ksb/ksb/INVOICE/anu.bson
2025-05-02T09:15:02.281+0530	done dumping INVOICE.Product (3 documents)
2025-05-02T09:15:02.282+0530	writing INVOICE.product to /home/ksb/ksb/INVOICE/product.bson
2025-05-02T09:15:02.329+0530	done dumping INVOICE.anu (2 documents)
2025-05-02T09:15:02.361+0530	done dumping INVOICE.product (0 documents)
2025-05-02T09:15:02.398+0530	done dumping INVOICE.Customer (3 documents)
2025-05-02T09:15:02.408+0530	writing INVOICE.customer to /home/ksb/ksb/INVOICE/customer.bson
2025-05-02T09:15:02.408+0530	done dumping INVOICE.customer (13 documents)



ans3)ksb@ksb-OptiPlex-3060:~$ mongorestore --db INVOICE /home/ksb/INVOICE
2025-05-02T09:26:44.868+0530	The --db and --collection flags are deprecated for this use-case; please use --nsInclude instead, i.e. with --nsInclude=${DATABASE}.${COLLECTION}
2025-05-02T09:26:44.868+0530	building a list of collections to restore from /home/ksb/INVOICE dir
2025-05-02T09:26:44.869+0530	reading metadata for INVOICE.Product from /home/ksb/INVOICE/Product.metadata.json
2025-05-02T09:26:44.869+0530	reading metadata for INVOICE.anu from /home/ksb/INVOICE/anu.metadata.json
2025-05-02T09:26:44.869+0530	reading metadata for INVOICE.customer from /home/ksb/INVOICE/customer.metadata.json
2025-05-02T09:26:44.869+0530	reading metadata for INVOICE.product from /home/ksb/INVOICE/product.metadata.json
2025-05-02T09:26:44.869+0530	reading metadata for INVOICE.Customer from /home/ksb/INVOICE/Customer.metadata.json
2025-05-02T09:26:45.471+0530	restoring INVOICE.customer from /home/ksb/INVOICE/customer.bson
2025-05-02T09:26:45.507+0530	finished restoring INVOICE.customer (13 documents, 0 failures)
2025-05-02T09:26:45.621+0530	restoring INVOICE.Customer from /home/ksb/INVOICE/Customer.bson
2025-05-02T09:26:45.657+0530	finished restoring INVOICE.Customer (3 documents, 0 failures)
2025-05-02T09:26:45.733+0530	restoring INVOICE.Product from /home/ksb/INVOICE/Product.bson
2025-05-02T09:26:45.782+0530	finished restoring INVOICE.Product (3 documents, 0 failures)
2025-05-02T09:26:45.889+0530	restoring INVOICE.anu from /home/ksb/INVOICE/anu.bson
2025-05-02T09:26:45.951+0530	finished restoring INVOICE.anu (2 documents, 0 failures)
2025-05-02T09:26:46.132+0530	restoring INVOICE.product from /home/ksb/INVOICE/product.bson
2025-05-02T09:26:46.144+0530	finished restoring INVOICE.product (0 documents, 0 failures)
2025-05-02T09:26:46.144+0530	no indexes to restore for collection INVOICE.anu
2025-05-02T09:26:46.144+0530	no indexes to restore for collection INVOICE.product
2025-05-02T09:26:46.144+0530	no indexes to restore for collection INVOICE.Customer
2025-05-02T09:26:46.144+0530	no indexes to restore for collection INVOICE.Product
2025-05-02T09:26:46.144+0530	restoring indexes for collection INVOICE.customer from metadata
2025-05-02T09:26:46.144+0530	index: &idx.IndexDocument{Options:primitive.M{"name":"name_1", "v":2}, Key:primitive.D{primitive.E{Key:"name", Value:1}}, PartialFilterExpression:primitive.D(nil)}

ans4)switched to db INVOICE
INVOICE> db.Customer.createIndex({name:1})
name_1
INVOICE> db.Customer.getIndexes()
[
  { v: 2, key: { _id: 1 }, name: '_id_' },
  { v: 2, key: { name: 1 }, name: 'name_1' }


//VERIFIED
